name: Terraform Deploy

on:
  workflow_call:
    inputs:
      terraform_directory:
        description: "Path to the Terraform directory"
        required: true
        type: string
      aws_region:
        description: "AWS Region"
        required: true
        type: string
      bucket_name:
        description: "S3 bucket name"
        required: true
        type: string
      environment:
        description: "Deployment environment (e.g., prod, dev)"
        required: true
        type: string
    secrets:
      AWS_SESSION_TOKEN:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      AWS_ACCESS_KEY_ID:
        required: true

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the repository
    - name: Checkout Code
      uses: actions/checkout@v3

    # Step 2: Configure AWS Credentials
    - name: Configure AWS Credentials
      env:
        AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      run: |
        echo "AWS credentials configured successfully."

    # Step 3: Navigate to Terraform Directory
    - name: Navigate to Terraform Directory
      working-directory: ${{ inputs.terraform_directory }}
      run: |
        echo "Navigated to Terraform directory: ${{ inputs.terraform_directory }}"

    # Step 4: Initialize Terraform
    - name: Initialize Terraform
      working-directory: ${{ inputs.terraform_directory }}
      run: terraform init

    # Step 5: Plan Terraform Changes
    - name: Plan Terraform Changes
      working-directory: ${{ inputs.terraform_directory }}
      run: |
        terraform plan \
          -var="aws_region=${{ inputs.aws_region }}" \
          -var="bucket_name=${{ inputs.bucket_name }}" \
          -var="environment=${{ inputs.environment }}"

    # Step 6: Apply Terraform Changes
    - name: Apply Terraform Changes
      working-directory: ${{ inputs.terraform_directory }}
      run: |
        terraform apply -auto-approve \
          -var="aws_region=${{ inputs.aws_region }}" \
          -var="bucket_name=${{ inputs.bucket_name }}" \
          -var="environment=${{ inputs.environment }}"
